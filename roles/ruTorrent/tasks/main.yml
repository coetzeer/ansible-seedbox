---

- name: copy ruTorrent update script
  copy: src=update-rutorrent dest=/usr/local/bin/update-rutorrent mode=0777 force=yes

- name: Make ruTorrent directory
  file:
    name: "{{ rutorrent_install_dir }}"
    state: directory

# - name: Download ruTorrent to /var/www/rutorrent
#   command: bash -e /usr/local/bin/update-rutorrent
#   args:
#     creates: /var/www/rutorrent/conf

- file: path="/usr/share/pydio" state=absent

- name: Checkout ruTorrent from git
  git: repo=https://github.com/Novik/ruTorrent.git dest="{{ rutorrent_install_dir }}" force=true
  changed_when: false

- name: Checkout ruTorrent plugins
  git:
    repo: "https://github.com/nelu/rutorrent-thirdparty-plugins.git"
    dest: "{{ rutorrent_install_dir_tmp }}"

- name: move plugins in place
  shell: "cp -R {{ rutorrent_install_dir_tmp }}/* {{ rutorrent_install_dir }}/plugins"
  changed_when: false

- name: Checkout ruTorrent mobile from git
  git:
    repo: https://github.com/xombiemp/rutorrentMobile.git
    dest: "{{ rutorrent_install_dir }}/plugins/mobile"

- name: Apply config template
  template: src=config.php dest="{{ rutorrent_install_dir }}/conf/config.php" owner=www-data group=www-data
  changed_when: false

- name: Copy autowatch config file
  copy: src=autotools-conf.php dest="{{ rutorrent_install_dir }}/plugins/autotools/conf.php" force=yes
  changed_when: false

- name: ffmpeg ppa for ubuntu 14.04
  apt_repository: repo='ppa:mc3man/trusty-media'
  when: ansible_distribution=="Ubuntu" and ansible_distribution_version | version_compare('14.04', '==')

- name: ffmpeg ppa for ubuntu 16.04
  apt_repository: repo='ppa:jonathonf/ffmpeg-3'
  when: ansible_distribution=="Ubuntu" and ansible_distribution_version | version_compare('16.04', '==')

- name: ffmpeg repo jessie
  apt_repository:
    repo: "deb http://www.deb-multimedia.org jessie main non-free"
    state: present
    filename: deb_multimedia
  when: ansible_distribution=="Debian" and ansible_distribution_major_version|int=="8"

- name: ffmpeg repo jessie backports
  apt_repository:
    repo: "deb http://www.deb-multimedia.org jessie-backports main"
    state: present
    filename: deb_multimedia
    update_cache: true
  when: ansible_distribution=="Debian" and ansible_distribution_major_version|int=="8"

- name: ffmpeg repo stretch
  apt_repository:
    repo: "deb http://www.deb-multimedia.org stretch main non-free"
    state: present
    filename: deb_multimedia
    update_cache: true
  when: ansible_distribution=="Debian" and ansible_distribution_major_version|int=="9"

- name: install ffmpeg
  apt: name=ffmpeg state=installed update_cache=yes
  when: ansible_distribution=="Debian" or ansible_distribution=="Ubuntu"

# https://www.vultr.com/docs/how-to-install-ffmpeg-on-centos
# On CentOS 7, you can install the Nux Dextop YUM repo with the following commands:
#
# sudo rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
# sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm
# For CentOS 6, you need to install another release:
#
# sudo rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
# sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el6/x86_64/nux-dextop-release-0-2.el6.nux.noarch.rpm

- name: Install nux desktop key
  shell: rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
  when: ansible_os_family == 'RedHat'

- name: Select Nginx packages Redhat 7
  yum:
    name: "http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm"
    state: present
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version|int == "7"

- name: Select Nginx packages Redhat 6
  yum:
    name: "http://li.nux.ro/download/nux/dextop/el6/x86_64/nux-dextop-release-0-2.el6.nux.noarch.rpm"
    state: present
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version|int == "6"

- name: install ffmpeg Redhat
  package: name=ffmpeg state=installed
  when: ansible_os_family == 'RedHat'

- name: Copy screenshots config file
  copy: src=screenshots-conf.php dest="{{ rutorrent_install_dir }}/plugins/screenshots/conf.php" force=yes
  changed_when: false

- name: Copy unpack config file
  copy: src=unpack-conf.php dest="{{ rutorrent_install_dir }}/plugins/unpack/conf.php" force=yes
  changed_when: false

- name: Create password
  command: "htpasswd -cb /etc/nginx/passwd {{ web_user }} {{ web_password }}"
  when: web_user is defined
  changed_when: false

- name: Copy over html files
  copy: src=auth.tar.gz dest=/tmp/auth.tar.gz

- name: Extract auth components
  command: "/usr/bin/bsdtar -xf /tmp/auth.tar.gz --strip-components 1"
  args:
    creates: "/var/www/login.html"
    chdir: "/var/www"

- name: Set Perms on ruTorrent directory
  file:
    name: /var/www
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
  changed_when: false

- name: Set Perms on ruTorrent directory
  file:
    name: /u02
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
